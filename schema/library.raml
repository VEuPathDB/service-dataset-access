#%RAML 1.0 Library
################################################################################
#                                                                              #
#  DO NOT EDIT THIS FILE; IT WAS GENERATED AUTOMATICALLY.                      #
#  CHANGES MADE HERE WILL BE LOST.                                             #
#                                                                              #
################################################################################

types:
  EndUser:
    type: object
    additionalProperties: false
    properties:
      user: UserDetails
      datasetId: string
      startDate?: datetime
      duration?: integer
      restrictionLevel: RestrictionLevel
      purpose: string
      researchQuestion: string
      analysisPlan: string
      disseminationPlan: string
      approvalStatus: ApprovalStatus
      denialReason?: string
      priorAuth: string
  EndUserCreateRequest:
    description: |
      New end user request body.

      Body MUST contain either `userId` property or the `email` property.

      If the `email` property is used, the service will attempt to locate a user
      account with that email.  If one is found, a new record will be created
      and it's ID returned in the response.  If one is not found, an email will
      be sent to the given address requesting the user create an account and
      **NO NEW RECORD WILL BE CREATED**.
    type: object
    additionalProperties: false
    properties:
      userId?:
        type: integer
        format: int64
        minimum: 1
      email?: string
      purpose: string
      researchQuestion: string
      analysisPlan: string
      disseminationPlan: string
      priorAuth: string
      datasetId: string
      startDate?: datetime
      duration?: integer
      restrictionLevel?: RestrictionLevel
      approvalStatus?: ApprovalStatus
      denialReason?: string
  EndUserCreateResponse:
    description: |
      End user creation response.

      Returns a flag indicating whether or not the record was actually created
      or not.  If `created == true` then the `endUserId` property will be
      present and contain the new end user record's ID.  If `created == false`
      then the `endUserId` property will NOT be present, and the successful
      response indicates that an email was sent to the email address given in
      the request.

      If the creation request used the `userId` property instead of the `email`
      property, a new record will always have been created on a success
      response.
    type: object
    additionalProperties: false
    properties:
      created: boolean
      endUserId?: string
  EndUserList:
    type: object
    additionalProperties: false
    properties:
      data: EndUser[]
      rows:
        type: integer
        minimum: 0
      offset:
        type: integer
        minimum: 0
      total:
        type: integer
        minimum: 0
  EndUserPatch:
    type: object
    additionalProperties: false
    properties:
      op:
        type: string
        enum:
          - add
          - remove
          - replace
      path:
        type: string
        pattern: ^/.+$
      value?: any
      from?: string
  DatasetProvider:
    type: object
    additionalProperties: false
    properties:
      providerId: DatastoreId
      datasetId: string
      user: UserDetails
      isManager: boolean
  DatasetProviderList:
    type: object
    additionalProperties: false
    properties:
      data: DatasetProvider[]
      rows:
        type: integer
        minimum: 0
      offset:
        type: integer
        minimum: 0
      total:
        type: integer
        minimum: 0
  DatasetProviderCreateRequest:
    type: object
    additionalProperties: false
    properties:
      datasetId: string
      userId?:
        type: integer
        format: int64
        minimum: 1
      email?: string
      isManager: boolean
  DatasetProviderCreateResponse:
    type: object
    additionalProperties: false
    properties:
      created:
        description: |
          Indicates whether a new provider record was created or not.

          If this value is `false` the `"providerId"` property will not be set.
          This happens when the request was sent using an email address that is
          not in our user database.  In this case no provider record was created
          but instead an email was sent to the given address requesting that the
          user register.

          If this value is `true` the `"providerId"` property will be set
          containing the primary key value of the newly created provider record.
        type: boolean
      providerId?:
        type: integer
        minimum: 1
  DatasetProviderPatchRequest:
    type: array
    minItems: 1
    maxItems: 1
    items: DatasetProviderPatch
  DatasetProviderPatch:
    type: object
    additionalProperties: false
    properties:
      op:
        type: string
        pattern: ^replace$
      path:
        type: string
        pattern: ^/isManager$
      value: boolean
  HistoryResponse:
    type: object
    additionalProperties: false
    properties:
      meta: HistoryMeta
      results: HistoryResult[]
  HistoryMeta:
    type: object
    additionalProperties: false
    properties:
      rows: integer
      offset: integer
  HistoryResult:
    type: object
    additionalProperties: false
    properties:
      cause: HistoryCause
      row: HistoryRow
  HistoryCause:
    type: object
    additionalProperties: false
    properties:
      user: HistoryUser
      action:
        type: string
        enum:
          - CREATE
          - UPDATE
          - DELETE
      timestamp: datetime-only
  HistoryUser:
    type: object
    additionalProperties: false
    properties:
      userID:
        type: integer
        format: int64
      firstName: string
      lastName: string
      email: string
      organization: string
  HistoryRow:
    type: object
    additionalProperties: false
    properties:
      endUserID:
        type: integer
        format: int64
      user: HistoryUser
      datasetPresenterID: string
      restrictionLevel:
        type: string
        enum:
          - PUBLIC
          - PRERELEASE
          - PROTECTED
          - CONTROLLED
          - PRIVATE
      approvalStatus:
        type: string
        enum:
          - APPROVED
          - REQUESTED
          - DENIED
      startDate: datetime-only
      duration:
        type: integer
        format: int64
      purpose: string
      researchQuestion: string
      analysisPlan: string
      priorAuth: string
      denialReason: string
      dateDenied: datetime-only
      allowSelfEdits: boolean
  PermissionsGetResponse:
    type: object
    additionalProperties: false
    properties:
      isStaff?:
        description: |
          Indicates whether the current user is listed in the service's staff
          entries.
        type: boolean
        default: false
      isOwner?:
        description: |
          Indicates whether the current user is listed in the service's staff
          entries _and_ is marked as a site owner.
        type: boolean
        default: false
      perDataset?:
        description: |
          If the current user is a provider or an end user of one or more
          datasets, these datasets will be listed here with the user's
          permission level for each specific dataset.

          If the user is not a provider or end user for any datasets, this field
          will be omitted.
        type: object
        additionalProperties: false
        properties:
          //: DatasetPermissionEntry
  ActionList:
    type: object
    additionalProperties: false
    properties:
      studyMetadata:
        description: study metadata
        type: boolean
      subsetting:
        description: count, distribution
        type: boolean
      visualizations:
        description: all viz plugins
        type: boolean
      resultsFirstPage:
        description: 'offset:0, numRecords: <=20'
        type: boolean
      resultsAll:
        description: any other tabular response
        type: boolean
  DatasetPermissionEntry:
    type: object
    additionalProperties: false
    properties:
      studyId: string
      type: DatasetPermissionLevel
      actionAuthorization: ActionList
      isManager?:
        description: |
          For providers, this field indicates whether the current user is marked
          as a manager for the dataset represented by the containing permission
          entry.

          This field will only be present if the containing permission entry
          type = `provider`.
        type: boolean
        default: false
  DatasetPermissionLevel:
    type: string
    enum:
      - provider
      - end-user
  Staff:
    type: object
    additionalProperties: false
    properties:
      staffId: DatastoreId
      user: UserDetails
      isOwner: boolean
  StaffList:
    type: object
    additionalProperties: false
    properties:
      data: Staff[]
      rows:
        type: integer
        minimum: 0
      offset:
        type: integer
        minimum: 0
      total:
        type: integer
        minimum: 0
  NewStaffRequest:
    type: object
    properties:
      userId:
        type: integer
        format: int64
        minimum: 1
      isOwner: boolean
  NewStaffResponse:
    type: object
    additionalProperties: false
    properties:
      staffId:
        type: integer
        minimum: 1
  StaffPatchRequest:
    type: array
    minItems: 1
    maxItems: 1
    items: StaffPatch
  StaffPatch:
    type: object
    additionalProperties: false
    properties:
      op:
        type: string
        pattern: ^replace$
      path:
        type: string
        pattern: ^/isOwner$
      value: boolean
  DatastoreId:
    type: integer
    minimum: 1
  UserDetails:
    type: object
    additionalProperties: false
    properties:
      userId:
        type: integer
        format: int64
        minimum: 1
      firstName: string
      lastName: string
      organization: string
      email: string
  RestrictionLevel:
    type: string
    enum:
      - public
      - prerelease
      - protected
      - controlled
      - private
  ApprovalStatus:
    type: string
    enum:
      - approved
      - requested
      - denied

