#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v1.1.1/libraries/base-service.raml

title: Dataset Access Service
version: v1.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v1.1.1/libraries/errors.raml
  lib: schema/library.raml

securitySchemes:
  header-auth:
    description: Authentication based on a WDK auth cookie.
    type:
      x-custom
    describedBy:
      headers:
        Auth_Key:
          description: Authorization header.
          type: string

/staff:
  get:
    displayName: Staff List
    description: List dataset staff in ascending order by ID.
    queryParameters:
      limit:
        type: integer
        minimum: 0
        default: 100
        description: Number of rows to include in the result
      offset:
        type: integer
        minimum: 0
        default: 0
        description: Number of rows to skip from the result
    responses:
      200:
        displayName: Success Response
        body:
          type: lib.StaffList
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      500:
        displayName: Internal Server Error
        body: error.Server
  post:
    displayName: New Staff Entry
    description: Create a new dataset staff record.
    body: lib.NewStaffRequest
    responses:
      200:
        displayName: Success Response
        body: lib.NewStaffResponse
      400:
        displayName: Bad Request
        body: error.BadRequest
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      422:
        displayName: Unprocessable Entity
        body: error.UnprocessableEntity
      500:
        displayName: Internal Server Error
        body: error.Server

  /{staff-id}:
    uriParameters:
      staff-id:
        type: lib.DatastoreId
    patch:
      displayName: Replace Staff Entry
      description: Update dataset staff.
      body: lib.StaffPatch[]
      responses:
        204:
          displayName: Success Response
        400:
          displayName: BadRequest
          body: error.BadRequest
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        422:
          displayName: Unprocessable Entity
          body: error.UnprocessableEntity
        500:
          displayName: Internal Server Error
          body: error.Server
    delete:
      displayName: Delete Staff Entry
      description: Delete dataset staff.
      responses:
        204:
          displayName: Success Response
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        500:
          displayName: Internal Server Error
          body: error.Server

/dataset-providers:
  get:
    displayName: Provider List
    description: Get a list of providers for this dataset.
    queryParameters:
      datasetId:
        type: string
        required: true
      limit:
        type: integer
        minimum: 0
        default: 100
        description: Number of rows to include in the result
      offset:
        type: integer
        minimum: 0
        default: 0
        description: Number of rows to skip from the result
    responses:
      200:
        displayName: Success Response
        body: lib.DatasetProviderList
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      500:
        displayName: Internal Server Error
        body: error.Server

  post:
    displayName: New Provider
    description: Create a new dataset provider record.
    body: lib.DatasetProviderCreateRequest
    responses:
      200:
        displayName: Success Response
        body: lib.DatasetProviderCreateResponse
      400:
        displayName: Bad Request
        body: error.BadRequest
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      422:
        displayName: Unprocessable Entity
        body: error.UnprocessableEntity
      500:
        displayName: Internal Server Error
        body: error.Server


  /{provider-id}:
    uriParameters:
      provider-id:
        description: Dataset provider ID.
        type: lib.DatastoreId
    patch:
      displayName: Replace Provider
      description: Replace a dataset provider record.
      body: lib.DatasetProviderPatch[]
      responses:
        204:
          displayName: Success Response
        400:
          displayName: BadRequest
          body: error.BadRequest
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        422:
          displayName: Unprocessable Entity
          body: error.UnprocessableEntity
        500:
          displayName: Internal Server Error
          body: error.Server
    delete:
      displayName: Delete Provider
      description: Delete a dataset provider record.
      responses:
        204:
          displayName: Success Response
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        500:
          displayName: Internal Server Error
          body: error.Server

/dataset-end-users:
  get:
    displayName: List End Users
    description: Get a list of all end-users for the specified dataset.
    queryParameters:
      datasetId:
        displayName: Dataset ID
        type: string
      limit:
        displayName: Result Limit
        description: Number of rows to include in the result
        type: integer
        minimum: 0
        default: 100
      offset:
        displayName: Result Offset
        description: Number of rows to skip from the result
        type: integer
        minimum: 0
        default: 0
      approval:
        displayName: Approval Status
        description: Filter results by the approval status of the users.
        type: string
        enum: ["approved", "requested", "denied"]
    responses:
      200:
        displayName: Success Response
        body: lib.EndUserList
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      500:
        displayName: Internal Server Error
        body: error.Server
  post:
    displayName: New End User
    description: Create a new dataset end-user record.
    responses:
      200:
      400:
        displayName: BadRequest
        body: error.BadRequest
      401:
        displayName: Unauthorized
        body: error.Unauthorized
      403:
        displayName: Forbidden
        body: error.Forbidden
      422:
        displayName: Unprocessable Entity
        body: error.UnprocessableEntity
      500:
        displayName: Internal Server Error
        body: error.Server

  /{end-user-id}:
    uriParameters:
      end-user-id:
        description: ID of a specific end-user record.
        type: lib.DatastoreId
    get:
      displayName: End User Details
      description: Get the details of an end-user record.
      responses:
        200:
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        500:
          displayName: Internal Server Error
          body: error.Server
    patch:
      displayName: Replace End User
      description: Replace a dataset end-user record.
      body: lib.EndUserPatch[]
      responses:
        204:
          displayName: Success Response
        400:
          displayName: BadRequest
          body: error.BadRequest
        401:
          displayName: Unauthorized
          body: error.Unauthorized
        403:
          displayName: Forbidden
          body: error.Forbidden
        404:
          displayName: Not Found
          body: error.NotFound
        422:
          displayName: Unprocessable Entity
          body: error.UnprocessableEntity
        500:
          displayName: Internal Server Error
          body: error.Server
